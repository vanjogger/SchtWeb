<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:task="http://www.springframework.org/schema/task" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/task
            http://www.springframework.org/schema/task/spring-task.xsd
             http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
             http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd">

    <!--	&lt;!&ndash; Root Context: defines shared resources visible to all other web components &ndash;&gt;
        &lt;!&ndash; 使用 annotation &ndash;&gt;
        <bean id="mappingJacksonHttpMessageConverter"
              class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" ></bean>

        &lt;!&ndash; 注解扫描的包 &ndash;&gt;
        <context:component-scan base-package="com.scht           &lt;!&ndash; 只扫描的对象 &ndash;&gt;
             <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        </context:component-scan>

        <context:annotation-config />
        &lt;!&ndash; 使用 annotation 自动注册bean,并检查 @Service, @Repository注解已被注入 &ndash;&gt;

        &lt;!&ndash; hibernate 属性配置 &ndash;&gt;
        <context:property-placeholder location="/WEB-INF/config/jdbc.properties" />

        <task:executor id="executor" pool-size="5" />
        <task:scheduler id="scheduler" pool-size="10" />
        <task:annotation-driven executor="executor"
            scheduler="scheduler" />

        &lt;!&ndash; Hibernate 配置管理 &ndash;&gt;
        <import resource="applicationContext-persistence.xml" />-->


    <context:component-scan base-package="com.scht">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <context:property-placeholder location="/WEB-INF/config/jdbc.properties"/>

    <task:executor id="executor" pool-size="5"/>
    <task:scheduler id="scheduler" pool-size="10"/>
    <task:annotation-driven executor="executor"
                            scheduler="scheduler"/>

    <!-- druid 数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="filters" value="stat"/>
        <property name="maxActive" value="20"/>
        <property name="initialSize" value="5"/>
        <property name="minIdle" value="1"/>
        <property name="maxWait" value="5000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="3000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath*:sql/*Mapper.xml"/>
       <property name="typeAliasesPackage" value="com.scht.admin.entity"></property>
        <!--<property name="configLocation" value="classpath*:com/scht/dao/*Mapper.xml"/>-->
    </bean>
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="dataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <aop:config>
        <aop:pointcut id="serviceOption" expression="execution(* com.scht.*.service.*Service.* (..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOption"/>
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="dataSourceTransactionManager">
        <tx:attributes>
            <tx:method name="*" rollback-for="com.scht.common.ServiceException"/>
        </tx:attributes>
    </tx:advice>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.scht.admin.dao"/>
    </bean>

    <import resource="applicationContext-shiro.xml"/>



    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
</beans>
