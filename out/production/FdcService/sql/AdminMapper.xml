<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.banksoft.admin.dao.AdminDao">
    <resultMap id="my_admin" type="com.banksoft.admin.entity.Admin">
        <id column="f_id" property="id"/>
        <result column="f_loginName" property="loginName"/>
        <result column="f_password" property="password"/>
        <result column="f_roleId" property="roleId"/>
        <result column="f_roleName" property="roleName"/>
        <result column="f_last_login_time" property="lastLoginTime"/>
        <result column="f_login_ip" property="loginIP"/>
        <result column="f_login_cnt" property="loginCnt"/>
        <result column="f_status" property="status"/>
        <result column="f_realName" property="realName"/>
        <result column="f_type" property="type"/>
    </resultMap>

    <insert id="saveAdmin" parameterType="com.banksoft.admin.entity.Admin">
        insert into base_admin (f_id, f_loginName, f_password,
        f_roleId,f_last_login_time,f_login_ip,f_login_cnt,f_status,f_roleName,f_realName,f_type) values (
        #{id}, #{loginName}, #{password}, #{roleId},#{lastLoginTime},#{loginIP},#{loginCnt},#{status},#{roleName},#{realName},#{type})
    </insert>

    <delete id="delete" parameterType="HashMap">
        delete from base_admin where f_id = #{id}
    </delete>

    <update id="updateAdmin" parameterType="com.banksoft.admin.entity.Admin" flushCache="true">
        update base_admin
        <set>
            <if test="loginName!=null">
                f_loginName = #{loginName} ,
            </if>
            <if test="password!=null">
                f_password = #{password} ,
            </if>
            <if test="roleId!=null">
                f_roleId = #{roleId} ,
            </if>
            <if test="roleName!=null">
                f_roleName = #{roleName} ,
            </if>
            <if test="lastLoginTime!=null">
                f_last_login_time = #{lastLoginTime} ,
            </if>
            <if test="loginIP!=null">
                f_login_ip = #{loginIP} ,
            </if>
            <if test="loginCnt!=null">
                f_login_cnt = #{loginCnt} ,
            </if>
            <if test="status!=null">
                f_status = #{status} ,
            </if>
            <if test="realName!=null">
                f_realName = #{realName} ,
            </if>
            <if test="type!=null">
                f_type = #{type} ,
            </if>
        </set>
        where f_id = #{id}
    </update>

    <select id="findById" parameterType="HashMap" resultMap="my_admin">
        select * from base_admin where f_id = #{id}
    </select>

    <select id="listAdminByName" parameterType="HashMap" resultMap="my_admin">
        select * from base_admin where f_loginName = #{loginName}
    </select>


    <select id="listAdmin" parameterType="HashMap" resultMap="my_admin">
        select *
        from base_admin
        where 1=1
        <if test="loginName!=null and loginName!=''">
           and f_loginName like  "%"#{loginName}"%"
        </if>
        <if test="status!=null and status!=''">
            and f_status = #{status}
        </if>
        limit #{pageIndex},#{pageSize}
    </select>
    <select id="countAdmin" parameterType="HashMap" resultType="Integer">
        select count(f_id)
        from base_admin
        where 1=1
        <if test="loginName!=null and loginName!=''">
            and f_loginName like  "%"#{loginName}"%"
        </if>
        <if test="status!=null and status!=''">
            and f_status = #{status}
        </if>
    </select>

    <select id="get" parameterType="HashMap" resultMap="my_admin">
        select * from base_admin where f_id = #{id}
    </select>

</mapper>